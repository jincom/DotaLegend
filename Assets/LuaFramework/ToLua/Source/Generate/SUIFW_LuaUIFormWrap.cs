//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SUIFW_LuaUIFormWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SUIFW.LuaUIForm), typeof(SUIFW.BaseUIForm));
		L.RegFunction("OnInitialize", OnInitialize);
		L.RegFunction("Display", Display);
		L.RegFunction("Hiding", Hiding);
		L.RegFunction("Redisplay", Redisplay);
		L.RegFunction("Freeze", Freeze);
		L.RegFunction("CallLuaMethod", CallLuaMethod);
		L.RegFunction("OnMessage", OnMessage);
		L.RegFunction("AddClickListener", AddClickListener);
		L.RegFunction("RemoveClickListener", RemoveClickListener);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnInitialize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SUIFW.LuaUIForm obj = (SUIFW.LuaUIForm)ToLua.CheckObject(L, 1, typeof(SUIFW.LuaUIForm));
			obj.OnInitialize();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Display(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SUIFW.LuaUIForm obj = (SUIFW.LuaUIForm)ToLua.CheckObject(L, 1, typeof(SUIFW.LuaUIForm));
			obj.Display();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Hiding(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SUIFW.LuaUIForm obj = (SUIFW.LuaUIForm)ToLua.CheckObject(L, 1, typeof(SUIFW.LuaUIForm));
			obj.Hiding();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Redisplay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SUIFW.LuaUIForm obj = (SUIFW.LuaUIForm)ToLua.CheckObject(L, 1, typeof(SUIFW.LuaUIForm));
			obj.Redisplay();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Freeze(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SUIFW.LuaUIForm obj = (SUIFW.LuaUIForm)ToLua.CheckObject(L, 1, typeof(SUIFW.LuaUIForm));
			obj.Freeze();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CallLuaMethod(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			SUIFW.LuaUIForm obj = (SUIFW.LuaUIForm)ToLua.CheckObject(L, 1, typeof(SUIFW.LuaUIForm));
			string arg0 = ToLua.CheckString(L, 2);
			object[] arg1 = ToLua.ToParamsObject(L, 3, count - 2);
			obj.CallLuaMethod(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnMessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SUIFW.LuaUIForm obj = (SUIFW.LuaUIForm)ToLua.CheckObject(L, 1, typeof(SUIFW.LuaUIForm));
			IMessage arg0 = (IMessage)ToLua.CheckObject(L, 2, typeof(IMessage));
			obj.OnMessage(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddClickListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SUIFW.LuaUIForm obj = (SUIFW.LuaUIForm)ToLua.CheckObject(L, 1, typeof(SUIFW.LuaUIForm));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 3);
			obj.AddClickListener(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveClickListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SUIFW.LuaUIForm obj = (SUIFW.LuaUIForm)ToLua.CheckObject(L, 1, typeof(SUIFW.LuaUIForm));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.RemoveClickListener(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

