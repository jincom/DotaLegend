//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SUIFW_UIManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SUIFW.UIManager), typeof(Manager));
		L.RegFunction("Awake", Awake);
		L.RegFunction("ShowUIForms", ShowUIForms);
		L.RegFunction("CloseUIForms", CloseUIForms);
		L.RegFunction("ShowALLUIFormCount", ShowALLUIFormCount);
		L.RegFunction("ShowCurrentUIFormsCount", ShowCurrentUIFormsCount);
		L.RegFunction("ShowCurrentStackUIFormsCount", ShowCurrentStackUIFormsCount);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Awake(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SUIFW.UIManager obj = (SUIFW.UIManager)ToLua.CheckObject(L, 1, typeof(SUIFW.UIManager));
			obj.Awake();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowUIForms(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(SUIFW.UIManager), typeof(string)))
			{
				SUIFW.UIManager obj = (SUIFW.UIManager)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				obj.ShowUIForms(arg0);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(SUIFW.UIManager), typeof(string), typeof(bool)))
			{
				SUIFW.UIManager obj = (SUIFW.UIManager)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				bool arg1 = LuaDLL.lua_toboolean(L, 3);
				obj.ShowUIForms(arg0, arg1);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(SUIFW.UIManager), typeof(string), typeof(bool), typeof(bool)))
			{
				SUIFW.UIManager obj = (SUIFW.UIManager)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				bool arg1 = LuaDLL.lua_toboolean(L, 3);
				bool arg2 = LuaDLL.lua_toboolean(L, 4);
				obj.ShowUIForms(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: SUIFW.UIManager.ShowUIForms");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseUIForms(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SUIFW.UIManager obj = (SUIFW.UIManager)ToLua.CheckObject(L, 1, typeof(SUIFW.UIManager));
			string arg0 = ToLua.CheckString(L, 2);
			obj.CloseUIForms(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowALLUIFormCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SUIFW.UIManager obj = (SUIFW.UIManager)ToLua.CheckObject(L, 1, typeof(SUIFW.UIManager));
			int o = obj.ShowALLUIFormCount();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowCurrentUIFormsCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SUIFW.UIManager obj = (SUIFW.UIManager)ToLua.CheckObject(L, 1, typeof(SUIFW.UIManager));
			int o = obj.ShowCurrentUIFormsCount();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowCurrentStackUIFormsCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SUIFW.UIManager obj = (SUIFW.UIManager)ToLua.CheckObject(L, 1, typeof(SUIFW.UIManager));
			int o = obj.ShowCurrentStackUIFormsCount();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

